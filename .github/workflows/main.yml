name: Builds, tests & co

on:
  pull_request:
    paths:
      - 'src/**'
      - '!src/tools/**'
      - 'src_ext/**'
      - 'dune'
      - 'dune-project'
      - '*.opam'
      - 'Makefile*'
      - 'configure*'
      - '.github/scripts/**'
      - '.github/workflows/main.yml'
      - 'tests/**'
      - '!tests/bench/**'
      - 'shell/'
  push:
    branches:
      - 'master'
      - '2.**'

env:
  OPAMBSVERSION: 2.1.0
  OPAMBSROOT: ~/.cache/.opam.cached
  OPAM12CACHE: ~/.cache/opam1.2/cache
  OPAM_REPO: https://github.com/ocaml/opam-repository.git
  OPAM_TEST_REPO_SHA: e9ce8525130a382fac004612302b2f2268f4188c
  OPAM_REPO_SHA: e9ce8525130a382fac004612302b2f2268f4188c
  SOLVER:
  CYGWIN_MIRROR: http://mirrors.kernel.org/sourceware/cygwin/
  CYGWIN_ROOT: D:\cygwin
  CYGWIN: winsymlinks:native
  CYGWIN_EPOCH: 3

defaults:
  run:
    shell: bash

jobs:

####
# Caches
####
  Analyse:
    runs-on: ubuntu-latest
    outputs:
      archives: ${{ steps.keys.outputs.archives }}
      ocaml-cache: ${{ steps.keys.outputs.ocaml-cache }}
      cygwin: ${{ steps.keys.outputs.cygwin }}
      opam-bs-cache: ${{ steps.keys.outputs.opam-bs-cache }}
    steps:
    - name: Checkout tree
      uses: actions/checkout@v4
    - name: Determine cache keys
      id: keys
      run: |
        echo archives=archives-1-${{ hashFiles('src_ext/Makefile.dune', 'src_ext/Makefile.sources', 'src_ext/Makefile', '.github/scripts/common/preamble.sh', '.github/scripts/main/preamble.sh', '.github/scripts/main/archives-cache.sh') }}-${{ env.OPAM_REPO_SHA }}
        echo archives=archives-1-${{ hashFiles('src_ext/Makefile.dune', 'src_ext/Makefile.sources', 'src_ext/Makefile', '.github/scripts/common/preamble.sh', '.github/scripts/main/preamble.sh', '.github/scripts/main/archives-cache.sh') }}-${{ env.OPAM_REPO_SHA }} >> $GITHUB_OUTPUT
        echo ocaml-cache=${{ hashFiles('src_ext/Makefile.dune', '.github/scripts/main/ocaml-cache.sh', '.github/scripts/main/preamble.sh') }}
        echo ocaml-cache=${{ hashFiles('src_ext/Makefile.dune', '.github/scripts/main/ocaml-cache.sh', '.github/scripts/main/preamble.sh') }} >> $GITHUB_OUTPUT
        echo cygwin=${{ hashFiles('.github/scripts/cygwin.cmd') }}-${{ env.CYGWIN_EPOCH }}
        echo cygwin=${{ hashFiles('.github/scripts/cygwin.cmd') }}-${{ env.CYGWIN_EPOCH }} >> $GITHUB_OUTPUT
        echo opam-bs-cache=${{ hashFiles('.github/scripts/main/opam-bs-cache.sh', '*.opam', '.github/scripts/main/preamble.sh') }}
        echo opam-bs-cache=${{ hashFiles('.github/scripts/main/opam-bs-cache.sh', '*.opam', '.github/scripts/main/preamble.sh') }} >> $GITHUB_OUTPUT
    - name: src_ext/archives and opam-repository Cache
      id: archives
      uses: actions/cache@v4
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: ${{ steps.keys.outputs.archives }}
        lookup-only: true
        enableCrossOsArchive: true
    - name: Create src_ext/archives and opam-repository cache
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/main/archives-cache.sh

####
# Opam cold
####
  Cold-Linux:
    runs-on: ubuntu-latest
    needs: [ Analyse ]
    env:
      OPAM_COLD: 1
    steps:
    - name: Install bubblewrap
      run: sudo apt install bubblewrap
    - name: Disable AppArmor
      run: echo 0 | sudo tee /proc/sys/kernel/apparmor_restrict_unprivileged_userns
    - name: Checkout tree
      uses: actions/checkout@v4
    - name: src_ext/archives and opam-repository Cache
      id: archives
      uses: actions/cache@v4
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: ${{ needs.Analyse.outputs.archives }}
        enableCrossOsArchive: true
    - name: Cold
      run: |
        make compiler
        bash -exu .github/scripts/main/main.sh x86_64-pc-linux-gnu
    - name: Test (basic)
      run: bash -exu .github/scripts/main/test.sh
