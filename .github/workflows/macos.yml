name: macOS

on: [ push, pull_request ]

env:
  OPAMBSVERSION: 2.1.0
  OPAMBSROOT: ~/.cache/.opam.cached
  OPAM12CACHE: ~/.cache/opam1.2/cache
  OPAM_REPO: https://github.com/dra27/opam-repository.git
  OPAM_TEST_REPO_SHA: 02ead5a557d118a8d7de05edeae25d2301325a7a
  OPAM_REPO_SHA: 03356a3912d5717064abf00fe0004f6f1e314305
  OCAML_VERSION: 4.11.2
  GH_OCAML_CACHE: ~/.cache/ocaml-local/**
  SOLVER:

defaults:
  run:
    shell: bash

jobs:

####
# Caches
####
  archives-cache:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: src ext archives cache
      id: archives
      uses: actions/cache@v2
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh

####
# Build
####
  build:
    runs-on: macos-latest
    needs: archives-cache
    strategy:
      matrix:
        os: [ macOS ]
        ocamlv: [ 4.12.0 ]
      fail-fast: true
    steps:
    - uses: actions/checkout@v2
    - name: src ext archives cache
      id: archives
      uses: actions/cache@v2
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.GH_OCAML_CACHE }}
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/ocaml-cache.sh', '.github/scripts/preamble.sh') }}
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      if: steps.ocaml-cache.outputs.cache-hit != 'true'
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/ocaml-cache.sh ocaml
    - name: Build
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/main.sh

####
# Opam tests
####
  test:
    runs-on: macos-latest
    needs: [ build, archives-cache ]
    strategy:
      matrix:
        os: [ macOS ]
        ocamlv: [ 4.11.2 ]
      fail-fast: false
    env:
      OPAM_TEST: 1
    steps:
    - uses: actions/checkout@v2
    - name: src ext archives cache
      id: archives
      uses: actions/cache@v2
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.GH_OCAML_CACHE }}
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/ocaml-cache.sh', '.github/scripts/preamble.sh') }}-test
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      if: steps.ocaml-cache.outputs.cache-hit != 'true'
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/ocaml-cache.sh ocaml
    - name: opam bootstrap cache
      id: opam-bootstrap
      uses: actions/cache@v2
      with:
        path: |
          ${{ env.OPAMBSROOT }}/**
          ~/.cache/opam-local/bin/**
        key: opam-${{ runner.os }}-${{ env.OPAMBSVERSION }}-${{ matrix.ocamlv }}-${{ env.OPAM_REPO_SHA }}-${{ hashFiles ('.github/scripts/opam-bs-cache.sh', '.github/scripts/preamble.sh') }}
    - name: opam root cache
      if: steps.opam-bootstrap.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/opam-bs-cache.sh
    - name: opam-rt cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/opam-rt/**
        key: ${{ runner.os }}-opam-rt-${{ matrix.ocamlv }}
    - name: Test
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/main.sh

####
# Compile solver backends
####
  solvers:
    runs-on: macos-latest
    needs: [ build, archives-cache ]
    strategy:
      matrix:
        os: [ macOS ]
        ocamlv: [ 4.11.2 ]
        solver: [ z3, 0install ]
      fail-fast: false
    env:
      SOLVER: ${{ matrix.solver }}
      OPAMBSROOT: ~/.cache/opam.${{ matrix.solver }}.cached
    steps:
    - uses: actions/checkout@v2
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.GH_OCAML_CACHE }}
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/ocaml-cache.sh', '.github/scripts/preamble.sh') }}-test
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      if: steps.ocaml-cache.outputs.cache-hit != 'true'
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/ocaml-cache.sh ocaml
    - name: src ext archives cache
      id: archives
      uses: actions/cache@v2
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh
    - name: opam bootstrap cache
      id: opam-bootstrap
      uses: actions/cache@v2
      with:
        path: |
          ${{ env.OPAMBSROOT }}/**
          ~/.cache/opam-local/bin/**
        key: opam-${{ matrix.solver }}-${{ runner.os }}-${{ env.OPAMBSVERSION }}-${{ matrix.ocamlv }}-${{ env.OPAM_REPO_SHA }}-${{ hashFiles ('.github/scripts/opam-bs-cache.sh', '.github/scripts/preamble.sh') }}
    - name: opam root cache
      if: steps.opam-bootstrap.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/opam-bs-cache.sh
    - name: Compile
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/solvers.sh

####
# Upgrade from 1.2 to current
####
  upgrade:
    runs-on: macos-latest
    needs: build
    strategy:
      matrix:
        os: [ macOS ]
        ocamlv: [ 4.11.2 ]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.GH_OCAML_CACHE }}
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/ocaml-cache.sh', '.github/scripts/preamble.sh') }}
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      if: steps.ocaml-cache.outputs.cache-hit != 'true'
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/ocaml-cache.sh ocaml
    - name: opam 1.2 root cache
      uses: actions/cache@v2
      with:
        path: ${{ env.OPAM12CACHE }}
        key: ${{ runner.os }}-opam1.2-root
    - name: Upgrade
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
        OPAM_UPGRADE: 1
      run: bash -exu .github/scripts/main.sh
