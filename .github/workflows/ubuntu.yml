name: Linux

on:
  push:
    paths:
    - 'src/**'
    - '!src/tools/**'
    - 'src_ext/**'
    - 'dune'
    - 'dune-project'
    - '*.opam'
    - 'Makefile*'
    - 'configure*'
    - '.github/**'
  pull_request:
    paths:
    - 'src/**'
    - '!src/tools/**'
    - 'src_ext/**'
    - 'dune'
    - 'dune-project'
    - '*.opam'
    - 'Makefile*'
    - 'configure*'
    - '.github/**'
#    paths-ignore:
#    - 'release/**'
#    - 'shell/**'
#    - 'admin-scripts/**'
#    - 'doc/**'
#    - 'CHANGES'
#    - 'LICENSE'
#    - 'CONTRIBUTING.md'
#    - 'master_changes.md'
#    - 'README.md'

env:
  OPAMBSVERSION: 2.1.0
  OPAMBSROOT: ~/.cache/.opam.cached
  OPAM12CACHE: ~/.cache/opam1.2/cache
  OPAM_REPO: https://github.com/ocaml/opam-repository.git
  OPAM_TEST_REPO_SHA: ec07d6d5f363d1c5b9ed3b927d0df1d58dad333c
  OPAM_REPO_SHA: ec07d6d5f363d1c5b9ed3b927d0df1d58dad333c
  OCAML_VERSION: 4.12.0
  GH_OCAML_CACHE: ~/.cache/ocaml-local/**
  SOLVER:

defaults:
  run:
    shell: bash

jobs:

####
# Caches
####
  archives-cache:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: src ext archives cache
      id: archives
      uses: actions/cache@v2
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh

  legacy-cache:
    runs-on: ubuntu-latest
    steps:
    - name: legacy cache
      id: legacy
      uses: actions/cache@v2
      with:
        path: ~/.opam
        key: legacy-${{ runner.os }}-${{ env.OPAM_REPO_SHA }}
    - name: install deps
      if: steps.legacy.outputs.cache-hit != 'true'
      run: sudo apt install opam
    - uses: actions/checkout@v2
      if: steps.legacy.outputs.cache-hit != 'true'
    - name: ocaml 4.03.0 cache
      if: steps.legacy.outputs.cache-hit != 'true'
      id: ocaml-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.GH_OCAML_CACHE }}
        key: ${{ runner.os }}-ocaml-4.03.0-${{ hashFiles ('.github/scripts/ocaml-cache.sh', '.github/scripts/preamble.sh') }}
    - name: Building ocaml 4.03.0 cache
      if: steps.ocaml-cache.outputs.cache-hit != 'true' && steps.legacy.outputs.cache-hit != 'true'
      env:
        OCAML_VERSION: 4.03.0
      run: bash -exu .github/scripts/ocaml-cache.sh ocaml
    - name: Build ocaml-secondary-compiler
      if: steps.legacy.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/legacy-cache.sh

####
# Build
####
  build:
    runs-on: ubuntu-latest
    needs: archives-cache
    strategy:
      matrix:
        os: [ Linux ]
        ocamlv: [ 4.08.1, 4.09.1, 4.10.2, 4.11.2, 4.12.0 ]
      fail-fast: true
    steps:
    - name: install deps
      run: sudo apt install bubblewrap
    - uses: actions/checkout@v2
    - name: src ext archives cache
      id: archives
      uses: actions/cache@v2
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.GH_OCAML_CACHE }}
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/main/ocaml-cache.sh', '.github/scripts/main/preamble.sh') }}
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      if: steps.ocaml-cache.outputs.cache-hit != 'true'
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/main/ocaml-cache.sh ocaml
    - name: Build
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/main/main.sh

####
# Legacy
####
  legacy:
    needs: [ build ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ Linux ]
        ocamlv: [ 4.03.0, 4.04.2, 4.05.0, 4.06.1, 4.07.1 ]
      # Intentionally fail fast, no need to run all build if there is a
      # problem in a given version; usually it is functions not defined in lower
      # versions of OCaml
      fail-fast: true
    steps:
    - name: install deps
      run: sudo apt install opam
    - uses: actions/checkout@v2
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.GH_OCAML_CACHE }}
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/main/ocaml-cache.sh', '.github/scripts/main/preamble.sh') }}
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      if: steps.ocaml-cache.outputs.cache-hit != 'true'
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/main/ocaml-cache.sh ocaml
    - name: Build
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/main/legacy.sh

####
# Legacy
####
  legacy:
    runs-on: ubuntu-latest
    needs: legacy-cache
    strategy:
      matrix:
        os: [ Linux ]
        ocamlv: [ 4.03.0, 4.04.2, 4.05.0, 4.06.1, 4.07.1 ]
      fail-fast: true
    steps:
    - name: install deps
      run: sudo apt install opam
    - uses: actions/checkout@v2
    - name: legacy cache
      id: legacy
      uses: actions/cache@v2
      with:
        path: ~/.opam
        key: legacy-${{ runner.os }}-${{ env.OPAM_REPO_SHA }}
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.GH_OCAML_CACHE }}
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/ocaml-cache.sh', '.github/scripts/preamble.sh') }}
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      if: steps.ocaml-cache.outputs.cache-hit != 'true'
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/ocaml-cache.sh ocaml
    - name: Build ocaml-secondary-compiler
      if: steps.legacy.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/legacy-cache.sh
    - name: Build
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/legacy.sh

####
# Opam tests
####
  test:
    runs-on: ubuntu-latest
    needs: [ build, archives-cache ]
    strategy:
      matrix:
        os: [ Linux ]
        ocamlv: [ 4.12.0 ]
      fail-fast: false
    env:
      OPAM_TEST: 1
    steps:
    - uses: actions/checkout@v2
    - name: install deps
      run: sudo apt install bubblewrap
    - name: src ext archives cache
      id: archives
      uses: actions/cache@v2
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.GH_OCAML_CACHE }}
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/ocaml-cache.sh', '.github/scripts/preamble.sh') }}-test
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      if: steps.ocaml-cache.outputs.cache-hit != 'true'
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/main/ocaml-cache.sh ocaml
    - name: opam bootstrap cache
      id: opam-bootstrap
      uses: actions/cache@v2
      with:
        path: |
          ${{ env.OPAMBSROOT }}/**
          ~/.cache/opam-local/bin/**
        key: opam-${{ runner.os }}-${{ env.OPAMBSVERSION }}-${{ matrix.ocamlv }}-${{ env.OPAM_REPO_SHA }}-${{ hashFiles ('.github/scripts/main/opam-bs-cache.sh', '.github/scripts/main/preamble.sh') }}
    - name: opam root cache
      if: steps.opam-bootstrap.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/main/opam-bs-cache.sh
    - name: opam-rt cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/opam-rt/**
        key: ${{ runner.os }}-opam-rt-${{ matrix.ocamlv }}
    - name: Test
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/main/main.sh

####
# Opam cold
####
  cold:
    runs-on: ubuntu-latest
    needs: [ build, archives-cache ]
    strategy:
      matrix:
        os: [ Linux ]
        ocamlv: [ 4.12.0 ]
      fail-fast: false
    steps:
    - name: install deps
      run: sudo apt install bubblewrap
    - uses: actions/checkout@v2
    - name: src ext archives cache
      id: archives
      uses: actions/cache@v2
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh
    - name: Cold
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
        OPAM_COLD: 1
      run: |
        make compiler
        make lib-pkg
        bash -exu .github/scripts/main/main.sh

####
# Compile solver backends
####
  solvers:
    runs-on: ubuntu-latest
    needs: [ build, archives-cache ]
    strategy:
      matrix:
        os: [ Linux ]
        ocamlv: [ 4.12.0 ]
        solver: [ z3, 0install ]
      fail-fast: false
    env:
      SOLVER: ${{ matrix.solver }}
      OPAMBSROOT: ~/.cache/opam.${{ matrix.solver }}.cached
    steps:
    - uses: actions/checkout@v2
    - name: install deps
      run: sudo apt install bubblewrap
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.GH_OCAML_CACHE }}
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/ocaml-cache.sh', '.github/scripts/preamble.sh') }}-test
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      if: steps.ocaml-cache.outputs.cache-hit != 'true'
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/ocaml-cache.sh ocaml
    - name: src ext archives cache
      id: archives
      uses: actions/cache@v2
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh
        key: opam-${{ matrix.solver }}-${{ runner.os }}-${{ env.OPAMBSVERSION }}-${{ matrix.ocamlv }}-${{ env.OPAM_REPO_SHA }}-${{ hashFiles ('.github/scripts/opam-bs-cache.sh', '.github/scripts/preamble.sh') }}
    - name: opam root cache
      if: steps.opam-bootstrap.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/main/opam-bs-cache.sh
    - name: Compile
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/main/solvers.sh

####
# Upgrade from 1.2 to current
####
  upgrade:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        os: [ Linux ]
        ocamlv: [ 4.12.0 ]
      fail-fast: false
    steps:
    - name: install deps
      run: sudo apt install bubblewrap
    - uses: actions/checkout@v2
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: actions/cache@v2
      with:
        path: ${{ env.GH_OCAML_CACHE }}
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/main/ocaml-cache.sh', '.github/scripts/main/preamble.sh') }}
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      if: steps.ocaml-cache.outputs.cache-hit != 'true'
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/ocaml-cache.sh ocaml
    - name: opam 1.2 root cache
      uses: actions/cache@v2
      with:
        path: ${{ env.OPAM12CACHE }}
        key: ${{ runner.os }}-opam1.2-root
    - name: Upgrade
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
        OPAM_UPGRADE: 1
      run: bash -exu .github/scripts/main/main.sh

####
# Around opam tests
####
  hygiene:
    runs-on: ubuntu-latest
    needs: archives-cache
    steps:
    - uses: actions/checkout@v2
    - name: src ext archives cache
      id: archives
      uses: actions/cache@v2
      with:
        path: |
          src_ext/archives
          ~/opam-repository
        key: archives-${{ runner.os }}-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}-${{ env.OPAM_REPO_SHA }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: bash -exu .github/scripts/archives-cache.sh
    - name: Hygiene
      if: contains(steps.files.outputs.modified, 'configure.ac') || contains(steps.files.outputs.all, 'src_ext')
      env:
        # Defined only on pull request jobs
        BASE_REF_SHA: ${{ github.event.pull_request.base.sha }}
        PR_REF_SHA: ${{ github.event.pull_request.head.sha }}
      run: bash -exu .github/scripts/main/hygiene.sh
